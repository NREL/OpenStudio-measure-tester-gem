{"created": 1713363694.4857805, "duration": 0.8138124942779541, "exitcode": 1, "root": "/home/julien/Software/Others/OS-build-release/Testing/bcl_measures", "environment": {}, "summary": {"passed": 5, "failed": 1, "total": 6, "collected": 6}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": ".", "type": "Dir"}]}, {"nodeid": "python_energyplusmeasure/docs", "outcome": "passed", "result": []}, {"nodeid": "python_energyplusmeasure/tests/output", "outcome": "passed", "result": []}, {"nodeid": "python_energyplusmeasure/tests/test_my_example_python_energyplus_measure.py::TestMyExamplePythonEnergyPlusMeasure", "outcome": "passed", "result": [{"nodeid": "python_energyplusmeasure/tests/test_my_example_python_energyplus_measure.py::TestMyExamplePythonEnergyPlusMeasure::test_number_of_arguments_and_argument_names", "type": "Function", "lineno": 18}, {"nodeid": "python_energyplusmeasure/tests/test_my_example_python_energyplus_measure.py::TestMyExamplePythonEnergyPlusMeasure::test_bad_argument_values", "type": "Function", "lineno": 33}, {"nodeid": "python_energyplusmeasure/tests/test_my_example_python_energyplus_measure.py::TestMyExamplePythonEnergyPlusMeasure::test_good_argument_values", "type": "Function", "lineno": 62}]}, {"nodeid": "python_energyplusmeasure/tests/test_my_example_python_energyplus_measure.py", "outcome": "passed", "result": [{"nodeid": "python_energyplusmeasure/tests/test_my_example_python_energyplus_measure.py::TestMyExamplePythonEnergyPlusMeasure", "type": "Class"}]}, {"nodeid": "python_energyplusmeasure/tests", "outcome": "passed", "result": [{"nodeid": "python_energyplusmeasure/tests/output", "type": "Dir"}, {"nodeid": "python_energyplusmeasure/tests/test_my_example_python_energyplus_measure.py", "type": "Module"}]}, {"nodeid": "python_energyplusmeasure", "outcome": "passed", "result": [{"nodeid": "python_energyplusmeasure/docs", "type": "Dir"}, {"nodeid": "python_energyplusmeasure/tests", "type": "Dir"}]}, {"nodeid": "python_modelmeasure/docs", "outcome": "passed", "result": []}, {"nodeid": "python_modelmeasure/tests/output", "outcome": "passed", "result": []}, {"nodeid": "python_modelmeasure/tests/test_my_example_python_model_measure.py::TestMyExamplePythonModelMeasure", "outcome": "passed", "result": [{"nodeid": "python_modelmeasure/tests/test_my_example_python_model_measure.py::TestMyExamplePythonModelMeasure::test_number_of_arguments_and_argument_names", "type": "Function", "lineno": 18}, {"nodeid": "python_modelmeasure/tests/test_my_example_python_model_measure.py::TestMyExamplePythonModelMeasure::test_bad_argument_values", "type": "Function", "lineno": 32}, {"nodeid": "python_modelmeasure/tests/test_my_example_python_model_measure.py::TestMyExamplePythonModelMeasure::test_good_argument_values", "type": "Function", "lineno": 72}]}, {"nodeid": "python_modelmeasure/tests/test_my_example_python_model_measure.py", "outcome": "passed", "result": [{"nodeid": "python_modelmeasure/tests/test_my_example_python_model_measure.py::TestMyExamplePythonModelMeasure", "type": "Class"}]}, {"nodeid": "python_modelmeasure/tests", "outcome": "passed", "result": [{"nodeid": "python_modelmeasure/tests/output", "type": "Dir"}, {"nodeid": "python_modelmeasure/tests/test_my_example_python_model_measure.py", "type": "Module"}]}, {"nodeid": "python_modelmeasure", "outcome": "passed", "result": [{"nodeid": "python_modelmeasure/docs", "type": "Dir"}, {"nodeid": "python_modelmeasure/tests", "type": "Dir"}]}, {"nodeid": "test_results/pytest/python_coverage_html", "outcome": "passed", "result": []}, {"nodeid": "test_results/pytest", "outcome": "passed", "result": [{"nodeid": "test_results/pytest/python_coverage_html", "type": "Dir"}]}, {"nodeid": "test_results", "outcome": "passed", "result": [{"nodeid": "test_results/pytest", "type": "Dir"}]}, {"nodeid": "test_ruby_energyplusmeasure/docs", "outcome": "passed", "result": []}, {"nodeid": "test_ruby_energyplusmeasure/tests/output", "outcome": "passed", "result": []}, {"nodeid": "test_ruby_energyplusmeasure/tests", "outcome": "passed", "result": [{"nodeid": "test_ruby_energyplusmeasure/tests/output", "type": "Dir"}]}, {"nodeid": "test_ruby_energyplusmeasure", "outcome": "passed", "result": [{"nodeid": "test_ruby_energyplusmeasure/docs", "type": "Dir"}, {"nodeid": "test_ruby_energyplusmeasure/tests", "type": "Dir"}]}, {"nodeid": "test_ruby_modelmeasure/docs", "outcome": "passed", "result": []}, {"nodeid": "test_ruby_modelmeasure/tests/output", "outcome": "passed", "result": []}, {"nodeid": "test_ruby_modelmeasure/tests", "outcome": "passed", "result": [{"nodeid": "test_ruby_modelmeasure/tests/output", "type": "Dir"}]}, {"nodeid": "test_ruby_modelmeasure", "outcome": "passed", "result": [{"nodeid": "test_ruby_modelmeasure/docs", "type": "Dir"}, {"nodeid": "test_ruby_modelmeasure/tests", "type": "Dir"}]}, {"nodeid": ".", "outcome": "passed", "result": [{"nodeid": "python_energyplusmeasure", "type": "Dir"}, {"nodeid": "python_modelmeasure", "type": "Dir"}, {"nodeid": "test_results", "type": "Dir"}, {"nodeid": "test_ruby_energyplusmeasure", "type": "Dir"}, {"nodeid": "test_ruby_modelmeasure", "type": "Dir"}]}], "tests": [{"nodeid": "python_energyplusmeasure/tests/test_my_example_python_energyplus_measure.py::TestMyExamplePythonEnergyPlusMeasure::test_number_of_arguments_and_argument_names", "lineno": 18, "outcome": "passed", "keywords": ["test_number_of_arguments_and_argument_names", "TestMyExamplePythonEnergyPlusMeasure", "test_my_example_python_energyplus_measure.py", "tests", "python_energyplusmeasure", "bcl_measures", ""], "setup": {"duration": 0.0008308349642902613, "outcome": "passed"}, "call": {"duration": 0.0023073030170053244, "outcome": "passed"}, "teardown": {"duration": 0.0005336409667506814, "outcome": "passed"}}, {"nodeid": "python_energyplusmeasure/tests/test_my_example_python_energyplus_measure.py::TestMyExamplePythonEnergyPlusMeasure::test_bad_argument_values", "lineno": 33, "outcome": "passed", "keywords": ["test_bad_argument_values", "TestMyExamplePythonEnergyPlusMeasure", "test_my_example_python_energyplus_measure.py", "tests", "python_energyplusmeasure", "bcl_measures", ""], "setup": {"duration": 0.0005015300121158361, "outcome": "passed"}, "call": {"duration": 0.0032658498967066407, "outcome": "passed", "stdout": "[openstudio.measure.OSRunner] <1> Cannot find current Workflow Step\n"}, "teardown": {"duration": 0.0003250960726290941, "outcome": "passed"}}, {"nodeid": "python_energyplusmeasure/tests/test_my_example_python_energyplus_measure.py::TestMyExamplePythonEnergyPlusMeasure::test_good_argument_values", "lineno": 62, "outcome": "passed", "keywords": ["test_good_argument_values", "TestMyExamplePythonEnergyPlusMeasure", "test_my_example_python_energyplus_measure.py", "tests", "python_energyplusmeasure", "bcl_measures", ""], "setup": {"duration": 0.0004913609009236097, "outcome": "passed"}, "call": {"duration": 0.0028953379951417446, "outcome": "passed", "stdout": "[openstudio.measure.OSRunner] <1> Cannot find current Workflow Step\nresults: {\n   \"step_final_condition\" : \"The building finished with 1 zones.\",\n   \"step_info\" : \n   [\n      \"A zone named 'New Zone' was added.\"\n   ],\n   \"step_initial_condition\" : \"The building started with 0 zones.\",\n   \"step_values\" : \n   [\n      {\n         \"name\" : \"zone_name\",\n         \"value\" : \"New Zone\"\n      }\n   ]\n}\n[openstudio.WorkflowStepResult] <0> WorkflowStepResult value called with undefined stepResult, returning 'Success'\n"}, "teardown": {"duration": 0.0003193860175088048, "outcome": "passed"}}, {"nodeid": "python_modelmeasure/tests/test_my_example_python_model_measure.py::TestMyExamplePythonModelMeasure::test_number_of_arguments_and_argument_names", "lineno": 18, "outcome": "failed", "keywords": ["test_number_of_arguments_and_argument_names", "TestMyExamplePythonModelMeasure", "test_my_example_python_model_measure.py", "tests", "python_modelmeasure", "bcl_measures", ""], "setup": {"duration": 0.0005105580203235149, "outcome": "passed"}, "call": {"duration": 0.0011858480283990502, "outcome": "failed", "crash": {"path": "/home/julien/Software/Others/OS-build-release/Testing/bcl_measures/python_modelmeasure/tests/test_my_example_python_model_measure.py", "lineno": 30, "message": "assert 1 == 2"}, "traceback": [{"path": "python_modelmeasure/tests/test_my_example_python_model_measure.py", "lineno": 30, "message": "AssertionError"}], "longrepr": "self = <test_my_example_python_model_measure.TestMyExamplePythonModelMeasure object at 0x7ff936d6df70>\n\n    def test_number_of_arguments_and_argument_names(self):\n        \"\"\"Test that the arguments are what we expect.\"\"\"\n        # create an instance of the measure\n        measure = MyExamplePythonModelMeasure()\n    \n        # make an empty model\n        model = openstudio.model.Model()\n    \n        # get arguments and test that they are what we are expecting\n        arguments = measure.arguments(model)\n        num_args = arguments.size()\n>       assert num_args == 2\nE       assert 1 == 2\n\npython_modelmeasure/tests/test_my_example_python_model_measure.py:30: AssertionError"}, "teardown": {"duration": 0.00036729604471474886, "outcome": "passed"}}, {"nodeid": "python_modelmeasure/tests/test_my_example_python_model_measure.py::TestMyExamplePythonModelMeasure::test_bad_argument_values", "lineno": 32, "outcome": "passed", "keywords": ["test_bad_argument_values", "TestMyExamplePythonModelMeasure", "test_my_example_python_model_measure.py", "tests", "python_modelmeasure", "bcl_measures", ""], "setup": {"duration": 0.0004939460195600986, "outcome": "passed"}, "call": {"duration": 0.0009219180792570114, "outcome": "passed", "stdout": "[openstudio.measure.OSRunner] <1> Cannot find current Workflow Step\nresults: {\n   \"step_errors\" : \n   [\n      \"Empty space name was entered.\"\n   ],\n   \"step_values\" : \n   [\n      {\n         \"name\" : \"space_name\",\n         \"value\" : \"\"\n      }\n   ]\n}\n"}, "teardown": {"duration": 0.00028630299493670464, "outcome": "passed"}}, {"nodeid": "python_modelmeasure/tests/test_my_example_python_model_measure.py::TestMyExamplePythonModelMeasure::test_good_argument_values", "lineno": 72, "outcome": "passed", "keywords": ["test_good_argument_values", "TestMyExamplePythonModelMeasure", "test_my_example_python_model_measure.py", "tests", "python_modelmeasure", "bcl_measures", ""], "setup": {"duration": 0.0004751100204885006, "outcome": "passed"}, "call": {"duration": 0.0618142340099439, "outcome": "passed", "stdout": "[openstudio.measure.OSRunner] <1> Cannot find current Workflow Step\nresults: {\n   \"step_final_condition\" : \"The building finished with 5 spaces.\",\n   \"step_info\" : \n   [\n      \"Space New Space was added.\"\n   ],\n   \"step_initial_condition\" : \"The building started with 4 spaces.\",\n   \"step_values\" : \n   [\n      {\n         \"name\" : \"space_name\",\n         \"value\" : \"New Space\"\n      }\n   ]\n}\n[openstudio.WorkflowStepResult] <0> WorkflowStepResult value called with undefined stepResult, returning 'Success'\n"}, "teardown": {"duration": 0.00032813195139169693, "outcome": "passed"}}]}